
.alert {
  padding: $alert-padding-y $alert-padding-x;
  margin-bottom: $alert-margin-bottom;
  border: $alert-border-width solid transparent;
  @include border-radius($alert-border-radius);
}

[class*="alert-"] {
  .alert-link {
    color: $white;
    border-bottom: 1px dotted rgba($white, .5);
  }
}

.alert-heading {
  font-weight: $font-weight-bold;
  font-size: $h4-font-size;
  margin-top: .15rem;
}

.alert-dismissible {
  .close {
    top: 50%;
    right: $alert-padding-x;
    padding: 0;
    transform: translateY(-50%);
    @include opacity(.6);


    &:hover,
    &:focus {
      @include opacity(1);
    }

    @include media-breakpoint-down(xs) {
      top: 1rem;
      right: .5rem;
    }

    &>span:not(.sr-only) {
      font-size: 1.5rem;
      background-color: transparent;
      @include opacity(.6);
    }

    &:hover,
    &:focus {
      &>span:not(.sr-only) {
        background-color: transparent;
        @include opacity(.9);
      }
    }
  }
}

// Alternate styles
//
// Generate contextual modifier classes for colorizing the alert.

@each $color, $value in $theme-colors {
  .alert-#{$color} {
    @include alert-variant(theme-color-level($color, $alert-bg-level), theme-color-level($color, $alert-border-level), theme-color-level($color, $alert-color-level));
  }
}
